{"version":3,"file":"static/js/83.e347ab02.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","config.js","services.js"],"sourcesContent":["import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  padding: 1rem;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 0.5rem;\n  list-style-type: circle;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #007bff;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport {Wrapper, Item, StyledLink} from \"./MoviesList.styled\";\nimport {useLocation} from \"react-router-dom\";\n\nexport const MoviesList = ({movies}) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      <ul>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <StyledLink to={`/react-practice/movies/${movie.id}`} state={{from: location}}>{movie.title}</StyledLink>\n          </Item>\n        ))}\n      </ul>\n    </Wrapper>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 16px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 200px;\n  transition: border-color 0.3s;\n\n  &:focus {\n    border-color: var(--primary-color);\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  color: var(--background-color);\n  background-color: var(--primary-color);\n  border: 1px solid var(--primary-color);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: var(--primary-color);\n  }\n`;\n","import {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Form, Input, Wrapper} from \"./SearchBox.styled\";\n\nexport const SearchBox = ({onSubmit}) => {\n  const [input, setInput] = useState('');\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (input.trim() === '') {\n      alert('Enter the movie title!');\n      return;\n    }\n\n    onSubmit(input);\n    setInput('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleFormSubmit}>\n        <Input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Wrapper>\n  );\n}\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n","import React, {useState, useEffect, useRef} from 'react';\nimport {Pagination} from 'antd';\nimport {getMovies} from '../services';\nimport {SearchBox} from '../components/SearchBox/SearchBox';\nimport {MoviesList} from '../components/MoviesList/MoviesList';\nimport {useSearchParams} from \"react-router-dom\";\nimport Loader from \"../components/Loader/Loader\";\nimport Error from \"../components/Error/Error\";\n\nconst MOVIES_PER_PAGE = 20;\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const prevFilmNameRef = useRef('');\n  const prevPageRef = useRef(1);\n\n  const filmName = searchParams.get('query') || '';\n\n  useEffect(() => {\n    if (filmName === prevFilmNameRef.current && page === prevPageRef.current) {\n      return;\n    }\n\n    prevFilmNameRef.current = filmName;\n    prevPageRef.current = page;\n\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const response = await getMovies(filmName, page);\n        setMovies(response.results);\n        setTotalPages(response.total_pages);\n      } catch (err) {\n        setError('Failed to fetch movies. Please try again later.');\n        console.error(\"Error fetching movies:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [filmName, page]);\n\n  const handleSearchSubmit = (value) => {\n    if (value !== prevFilmNameRef.current) {\n      setSearchParams({query: value});\n      setPage(1);\n      setMovies([]);\n    }\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n  };\n\n  if (error) {\n    return <Error errorDetails={error}/>;\n  }\n\n  return (\n    <div>\n      {loading && <Loader/>}\n      <SearchBox onSubmit={handleSearchSubmit}/>\n      <MoviesList movies={movies}/>\n      {filmName && movies.length > 0 && (\n        <Pagination\n          current={page}\n          pageSize={MOVIES_PER_PAGE}\n          total={totalPages * MOVIES_PER_PAGE}\n          onChange={handlePageChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","export const BASE_URL = 'https://api.themoviedb.org/3'\nexport const API_KEY = '46524a805b39690e1dbf4f8ffae20232'\n","import axios from 'axios';\nimport {BASE_URL, API_KEY} from './config';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n  timeout: 10000,\n});\n\nconst fetchData = async (url, options = {}) => {\n  try {\n    return (await axiosInstance.get(url, options)).data;\n  } catch (error) {\n    if (error.response) {\n      return Promise.reject(new Error(`HTTP error! status: ${error.response.status}`));\n    } else if (error.request) {\n      return Promise.reject(new Error('No response received from the server.'));\n    } else {\n      return Promise.reject(new Error(error.message || 'An error occurred while fetching data.'));\n    }\n  }\n};\n\nexport const getTrending = () => {\n  return fetchData('/trending/movie/day');\n};\n\nexport const getMovieDetails = (movieId) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}`);\n};\n\nexport const getMovies = (movieName, page) => {\n  if (!movieName) {\n    return Promise.reject(new Error('Movie name is required'));\n  }\n\n  return fetchData('/search/movie', {\n    params: {\n      query: movieName,\n      page: page\n    },\n  });\n}\n\nexport const getCast = (movieId, page) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}/credits`, {\n    params: {\n      page: page\n    }\n  });\n};\n\nexport const getReviews = (movieId, page) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}/reviews`, {\n    params: {\n      page: page\n    }\n  });\n};\n"],"names":["Wrapper","styled","Item","StyledLink","Link","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","movie","to","id","state","from","title","Form","Input","Button","SearchBox","onSubmit","input","setInput","useState","_jsxs","event","preventDefault","trim","alert","type","value","onChange","target","Movies","searchParams","setSearchParams","useSearchParams","setMovies","loading","setLoading","error","setError","page","setPage","totalPages","setTotalPages","prevFilmNameRef","useRef","prevPageRef","filmName","get","useEffect","current","async","response","getMovies","results","total_pages","err","console","fetchMovies","Error","errorDetails","Loader","query","length","Pagination","pageSize","total","axiosInstance","axios","baseURL","params","api_key","timeout","fetchData","url","options","arguments","undefined","data","Promise","reject","status","request","message","getTrending","getMovieDetails","movieId","movieName","getCast","getReviews"],"sourceRoot":""}