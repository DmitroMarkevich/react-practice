{"version":3,"file":"static/js/645.bb979116.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/List/ReviewsList.styled.jsx","components/Reviews/List/ReviewsList.jsx","components/Reviews/Reviews.jsx","config.js","services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n  font-size: 1.5rem;\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-medium);\n`;\n\nexport const NoReviewInfo = styled.p`\n  font-style: italic;\n  color: var(--text-secondary);\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  background-color: #f9f9f9;\n`;\n\nexport const List = styled.ul`\n  list-style-type: circle;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 15px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ddd;\n`;\n\nexport const Name = styled.h3`\n  margin: 0;\n  font-weight: 700;\n  color: var(--text-primary);\n`;\n\nexport const Content = styled.p`\n  text-align: justify;\n  word-break: break-word;\n  hyphens: auto;\n  color: var(--text-secondary);\n`;\n","import PropTypes from \"prop-types\";\nimport {List, ListItem, Wrapper, Name, Content} from \"./ReviewsList.styled\";\n\nconst ReviewsList = ({reviews}) => {\n  function stripHtmlTags(html) {\n    return html.replace(/<[^>]*>/g, '');\n  }\n\n  return (\n    <Wrapper>\n      <List>\n        {reviews.map(({id, author, content}) => (\n          <ListItem key={id}>\n            <Name>Author: {author}</Name>\n            <Content>{stripHtmlTags(content)}</Content>\n          </ListItem>\n        ))}\n      </List>\n    </Wrapper>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import {useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {getReviews} from \"../../services\";\nimport {NoReviewInfo, Title} from \"./Reviews.styled\";\nimport ReviewsList from \"./List/ReviewsList\";\nimport Loader from \"../Loader/Loader\";\nimport Error from \"../Error/Error\";\n\nconst Reviews = () => {\n  const {movieId} = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n      try {\n        const response = await getReviews(Number(movieId));\n        setReviews(response.results);\n      } catch (error) {\n        setError('Failed to load cast information.');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (error) {\n    return <Error errorDetails={error}/>;\n  }\n\n  return (\n    <div>\n      {loading && <Loader/>}\n      <Title>Reviews</Title>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews}/>\n      ) : (\n        <NoReviewInfo>No reviews available</NoReviewInfo>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n","export const BASE_URL = process.env.REACT_APP_BASE_URL;\nexport const API_KEY = process.env.REACT_APP_API_KEY;\n","import axios from 'axios';\nimport {BASE_URL, API_KEY} from './config';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n  timeout: 10000,\n});\n\nconst fetchData = async (url, options = {}) => {\n  try {\n    return (await axiosInstance.get(url, options)).data;\n  } catch (error) {\n    if (error.response) {\n      return Promise.reject(new Error(`HTTP error! status: ${error.response.status}`));\n    } else if (error.request) {\n      return Promise.reject(new Error('No response received from the server.'));\n    } else {\n      return Promise.reject(new Error(error.message || 'An error occurred while fetching data.'));\n    }\n  }\n};\n\nexport const getTrending = () => {\n  return fetchData('/trending/movie/day');\n};\n\nexport const getMovieDetails = (movieId) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}`);\n};\n\nexport const getMovies = (movieName, page) => {\n  if (!movieName) {\n    return Promise.reject(new Error('Movie name is required'));\n  }\n\n  return fetchData('/search/movie', {\n    params: {\n      query: movieName,\n      page: page\n    },\n  });\n}\n\nexport const getCast = (movieId, page) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}/credits`, {\n    params: {\n      page: page\n    }\n  });\n};\n\nexport const getReviews = (movieId, page) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}/reviews`, {\n    params: {\n      page: page\n    }\n  });\n};\n"],"names":["Title","styled","NoReviewInfo","Wrapper","List","ListItem","Name","Content","_ref","reviews","_jsx","children","map","_ref2","id","author","content","_jsxs","html","replace","Reviews","movieId","useParams","setReviews","useState","error","setError","loading","setLoading","useEffect","async","response","getReviews","Number","results","console","fetchReviews","Error","errorDetails","Loader","length","ReviewsList","BASE_URL","process","REACT_APP_BASE_URL","API_KEY","REACT_APP_API_KEY","axiosInstance","axios","baseURL","params","api_key","timeout","fetchData","url","options","arguments","undefined","get","data","Promise","reject","status","request","message","getTrending","getMovieDetails","getMovies","movieName","page","query","getCast"],"sourceRoot":""}