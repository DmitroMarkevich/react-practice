{"version":3,"file":"static/js/257.9579118b.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","config.js","services.js"],"sourcesContent":["import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport const Container = styled.section`\n  padding: var(--spacing-large);\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  color: var(--primary-color);\n`;\n\nexport const Title = styled.h2`\n  font-size: 2rem;\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-medium);\n`;\n\nexport const Img = styled.img`\n  border-radius: 0.5rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  max-width: 100%;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 1rem;\n  margin-top: var(--spacing-small);\n  color: var(--text-secondary);\n`;\n\nexport const OverviewTitle = styled.h3`\n  font-size: 1.25rem;\n  color: var(--text-primary);\n  margin-top: var(--spacing-medium);\n`;\n\nexport const Overview = styled.p`\n  font-size: 1rem;\n  color: var(--text-secondary);\n`;\n\nexport const GenresTitle = styled.h3`\n  font-size: 1.25rem;\n  color: var(--text-primary);\n  margin-top: var(--spacing-medium);\n`;\n\nexport const Genres = styled.p`\n  font-size: 1rem;\n  color: var(--text-secondary);\n`;\n\nexport const AdditionalInfoTitle = styled.h3`\n  font-size: 1.25rem;\n  color: var(--text-primary);\n  margin-top: var(--spacing-medium);\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: var(--spacing-large);\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  list-style-type: none;\n  padding: 0;\n  gap: 16px;\n  margin: 0;\n`;\n\nexport const InfoLink = styled(Link)`\n  font-size: 1rem;\n  color: var(--primary-color);\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import {Outlet, useLocation, useParams} from 'react-router-dom';\nimport {Suspense, useEffect, useRef, useState} from 'react';\nimport {getMovieDetails} from '../../services';\nimport {\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  BackLink,\n  Container,\n  Genres,\n  GenresTitle,\n  InfoList,\n  Overview,\n  OverviewTitle,\n  Img,\n  UserScore,\n  Title,\n  InfoLink\n} from './MovieDetails.styled';\nimport {FaArrowLeft} from 'react-icons/fa'\nimport Error from \"../../components/Error/Error\";\nimport Loader from \"../../components/Loader/Loader\";\n\nconst MovieDetails = () => {\n  const {movieId} = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/react-practice/movies');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await getMovieDetails(Number(movieId));\n        setMovie(response);\n      } catch (error) {\n        setError('Failed to load movie details');\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (error) {\n    return <Error errorDetails={error}/>;\n  }\n\n  if (!movie) {\n    return <Loader/>;\n  }\n\n  const {original_title, poster_path, vote_average, overview, genres} = movie;\n\n  return (\n    <Container>\n      <BackLink to={backLinkHref.current}>\n        <FaArrowLeft style={{marginRight: '8px'}}/>\n        Go back\n      </BackLink>\n\n      <div>\n        <Title>{original_title}</Title>\n        {poster_path && (\n          <Img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={original_title}\n            width=\"270\"\n          />\n        )}\n        <UserScore>User score: {vote_average ? (vote_average * 10).toFixed(1) : 'N/A'}%</UserScore>\n\n        <OverviewTitle>Overview</OverviewTitle>\n        <Overview>{overview || 'No overview available'}</Overview>\n\n        <GenresTitle>Genres</GenresTitle>\n        <Genres>{genres.map(genre => genre.name).join(', ')}</Genres>\n      </div>\n\n      <AdditionalInfo>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <InfoList>\n          <li>\n            <InfoLink to=\"cast\">Cast</InfoLink>\n          </li>\n          <li>\n            <InfoLink to=\"reviews\">Reviews</InfoLink>\n          </li>\n        </InfoList>\n      </AdditionalInfo>\n\n      <Suspense fallback={<Loader/>}>\n        <Outlet/>\n      </Suspense>\n    </Container>\n  );\n}\n\nexport default MovieDetails;\n","export const BASE_URL = 'https://api.themoviedb.org/3'\nexport const API_KEY = '46524a805b39690e1dbf4f8ffae20232'\n","import axios from 'axios';\nimport {BASE_URL, API_KEY} from './config';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n  timeout: 10000,\n});\n\nconst fetchData = async (url, options = {}) => {\n  try {\n    return (await axiosInstance.get(url, options)).data;\n  } catch (error) {\n    if (error.response) {\n      return Promise.reject(new Error(`HTTP error! status: ${error.response.status}`));\n    } else if (error.request) {\n      return Promise.reject(new Error('No response received from the server.'));\n    } else {\n      return Promise.reject(new Error(error.message || 'An error occurred while fetching data.'));\n    }\n  }\n};\n\nexport const getTrending = () => {\n  return fetchData('/trending/movie/day');\n};\n\nexport const getMovieDetails = (movieId) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}`);\n};\n\nexport const getMovies = (movieName, page) => {\n  if (!movieName) {\n    return Promise.reject(new Error('Movie name is required'));\n  }\n\n  return fetchData('/search/movie', {\n    params: {\n      query: movieName,\n      page: page\n    },\n  });\n}\n\nexport const getCast = (movieId, page) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}/credits`, {\n    params: {\n      page: page\n    }\n  });\n};\n\nexport const getReviews = (movieId, page) => {\n  if (!movieId) {\n    return Promise.reject(new Error('Movie ID is required'));\n  }\n\n  return fetchData(`/movie/${movieId}/reviews`, {\n    params: {\n      page: page\n    }\n  });\n};\n"],"names":["Container","styled","BackLink","Link","Title","Img","UserScore","OverviewTitle","Overview","GenresTitle","Genres","AdditionalInfoTitle","AdditionalInfo","InfoList","InfoLink","MovieDetails","_location$state$from","_location$state","movieId","useParams","movie","setMovie","useState","error","setError","location","useLocation","backLinkHref","useRef","state","from","useEffect","async","response","getMovieDetails","Number","console","fetchMovie","_jsx","Error","errorDetails","Loader","original_title","poster_path","vote_average","overview","genres","_jsxs","children","to","current","FaArrowLeft","style","marginRight","src","alt","width","toFixed","map","genre","name","join","Suspense","fallback","Outlet","axiosInstance","axios","baseURL","params","api_key","timeout","fetchData","url","options","arguments","length","undefined","get","data","Promise","reject","status","request","message","getTrending","getMovies","movieName","page","query","getCast","getReviews"],"sourceRoot":""}